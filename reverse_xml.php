<?php

include("functions.php");

//load the rules text file
//this functin define in functions.php
$rules = get_the_rules("ottoman_arabic_rules.txt");

//get metadata information from the $_POST
$title = $_POST['title'];
if(!$title) $htitle = "untitled"; else $htitle = $title;
$author = $_POST['author'];
$date = $_POST['date'];
$responsibility = $_POST['responsibility'];

//check and see if a file was uploaded
if ($_FILES["file"]["error"] > 0) {
  $file = false;
  } else {
  $file = $_FILES["file"]["tmp_name"];
  }

//if a file was uploaded, append it to the text area content
if($file != false) {
	$input = $_POST['area'] . file_get_contents($file);
	} else {
	$input = $_POST['area'];
	}

//insert a leadind space
$input = " " . $input;

//count the number of tags like <stuff> and store them for later
preg_match_all('/<(.*?)>/', $input, $matches);

//replace all tags with a numbered tag like <1>
for($i = 0; $i < sizeof($matches[0]); $i++) {
	#$input = preg_replace('/<(.*?)>/', "<>", $input);
	$input = str_replace($matches[0][$i], "<".$i.">", $input);
	}
	
//count the entity references and store them for later
preg_match_all('/&#(.*?);/', $input, $matches2);

//replace the entity references with bracketed number like [1]
for($i = 0; $i < sizeof($matches2[0]); $i++) {
	$input = str_replace($matches2[0][$i], "[".$i."]", $input);
	}
	
//remove extraneous space
$input = preg_replace('([[:space:]]+)', " ", $input);

//retrieve the keys from the rules file
$keys = array_keys($rules);
//iterate over the rules and apply them
foreach ($keys as $key) {
	$input = str_replace($key, $rules[$key], $input);
	}

//get the font size
$size = $_POST['size'];

//the markers for line group breaks and line breaks
$pbreak = strpos($input, "**"); 
$lbreak = strpos($input, "*");

//if there are both lines and line groups, put <p> around the line <div>
if($pbreak !== false  && $lbreak !== false) {
	$input = str_replace("**", "</l>\n</lg>\n<lg>\n<l>", $input);
	}

//if just lines, put the line in a <div>
if($lbreak !== false) {
	$input = str_replace("*", "</l>\n<l>", $input);
	}
	
//replace the + with &# to correct the entity references
$input = str_replace("+", "&#", $input);

//put the stored tags back into place
for($i = 0; $i < sizeof($matches[0]); $i++) {
	$input = str_replace("<".$i.">", $matches[0][$i], $input);
	}

//put the stored entity references back into place
for($i = 0; $i < sizeof($matches2[0]); $i++) {
	$input = str_replace("[".$i."]", $matches2[0][$i], $input);
	}

//html stuff
echo "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n";
echo "<?xml-stylesheet type=\"text/css\" href=\"mystyle.css\" ?>\n";
echo "<!DOCTYPE TEI PUBLIC \"-//OTAP//DTD TEI Transitional//EN\" \"http://www.tei-c.org/release/xml/tei/custom/schema/dtd/tei_lite.dtd\">\n";
echo "<tei>\n<teiHeader>\n";
echo "<fileDesc>\n";

//header stuff with some fields taken from the Metadata fields
echo "<titleStmt>\n";
echo "<title>\n";
echo $title . "\n";
echo "</title>\n";
echo "<principal>\n";
echo $author . "\n";
echo "</principal>\n";
echo "</titleStmt>\n";
echo "<editionStmt>\n";
echo "</editionStmt>\n";

echo "<extent>\n";
echo "</extent>\n";

echo "<publicationStmt>\n";
echo "<authority>\n";
echo "OTAP\n";
echo "</authority>\n";
echo "<address>\n";
echo "Near Eastern Languages\n";
echo "</address>\n";
echo "</publicationStmt>\n";

echo "<sourceDesc>\n";
echo "<biblStruct>\n";
echo "</biblStruct>\n";
echo "<msDesc>\n";
echo "</msDesc>\n";

echo "</sourceDesc>\n";

echo "</fileDesc>\n";

echo "<encodingDesc>\n";
echo "Generated by the Revesible Transcription System.\n";
echo "</encodingDesc>\n";
echo "</teiHeader>\n";
echo "<text>\n<body>\n<div>\n";

//take care of the various possibilities of line or line group
if($prose !== false) { echo "<lg>\n"; }
if($verse !== false && $prose === false) { echo "<lg>\n"; }
if($verse === false && $prose === false) { echo "<lg>\n<l>"; }
if($verse !== false) { echo "<l>"; }
echo $input;
if($verse !== false) { echo "</l>\n"; }
if($verse !== false && $prose === false) { echo "</lg>\n"; }
if($verse === false && $prose === false) { echo "</l>\n</lg>\n"; }
if($prose !== false) { echo "</lg>\n"; }

//close up
echo "</div>\n</body>\n</text>\n</tei>";

?>
